	cellule.py
dans __init__ : remplacer None par [] (et modif des tests ligne 107 et 111)


	grille.py
début : ajout constante VOISINAGE utilisée pour les coordonnées des voisins

__init__ : ajout d'un attribut type_grille par défaut "plane", pouvant valoir aussi "torique"
        par conséquent ajout des méthodes get_type_grille et set_type_grille

suppression de la méthode est_voisin

get_voisins : 	réécriture de la boucle en utilisant la constante VOISINAGE
		2 cas selon que la grille est torique ou plane

ajout des tests sur une grille torique 

	
	celluleFrame.py

Question : DEATH_CELL_BG et LIVING_CELL_BG étant des constantes qui ne dépendent pas de l'instance de l'objet cellule créée, est-ce qu'il ne faut pas en faire des attributs de classe en les sortant du __init__() ? (même question pour le HOVER_CELL_BG dans grilleframe)

utilisation du double héritage; la classe CelluleFrame hérite de Cellule, ce qui évite d'avoir à recopier toutes les méthodes. On ajoute ici la gestion de l'interface graphique et on reprend ce qui a déjà été codé sans faire de copier-coller

__init__() : c'est Cellule.__init__(self) qui initialise les attributs actuels futurs et voisins de la cellule
		j'ai ajouté self.HOVER_CELL_BG = "..." tiré de grilleFrame et utilisé dans super().__init__ pour highlightbackground

suppression des méthodes déjà définies dans cellule à l'exception de celles qui agissent sur l'interface graphique cad uniquement basculer (oui, il reste peu de choses dans cette classe!)

suppression des méthodes et tests d'affichage (str) qui n'ont pas de sens pour cette classe


	grilleFrame.py

idem : utilisation de l'héritage de grille dans l'init

déplacement de tous les exemples dans un fichier à part


	app.py 

import du fichier bibli_exemples et réécriture de la fonction init_known_struct
	avec petite modification orthographe : pulsard --> pulsar
dans cette même fonction : remplacer match par des elif; c'est la seule utilisation de python 3.10...

dans update_grid_type, j'ai légèrement modifié le code (slicing) pour prendre en compte les attributs "plane" et "torique" introduits dans grille

J'ai rajouté au début 2 constantes : NBLIGNES,NBCOLONNES=30,50 et modifié la ligne de création de la grille mais l'idéal serait de demander à l'utilisateur ces dimensions avant d'afficher la grille. Est-ce que ca oblige à faire une autre fen^tre tkinter avant cela juste pour demander les 2 valeurs? 
